{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmLocation": {
            "type": "string",
            "metadata": {
                "description": "This parameter corresponds to the Azure region where the VM will be created"
              }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "This parameter corresponds to the name of the Virtual Machine being created"
              }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "This parameter corresponds to the size of the Virtual Machine created"
              }
        },
        "vmNetworkInterfaceName": {
            "type": "string",
            "metadata": {
                "description": "This parameter corresponds to the network Interface name to which the Virtual Machine will be attached"
              }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "This parameter corresponds to the Virtual Machine admin user name "
              }
        }, 
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "This parameter corresponds to the Virtual Machine admin password"
              }
        },
        "vmDiagnosticsStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "This parameter corresponds to storage account name we are going to use for storing Blob Data"
              }
        },
        "vmFullyBakedImageAvl": {
            "type": "string",
            "allowedValues": [
              "Yes",
              "No"
            ],
            "metadata": {
              "description": "This parameter specifies whether a Fully Baked Image is available to create a VM"
            }
          },       
        "vmFullyBakedImageRef": {
            "type": "string",
            "metadata": {
              "description": "This parameter speicfies the URI where the Fully Baked Image is stored"
            }
          },         
          "vmNumDataDisks": {
            "type": "int",
            "metadata": {
              "description": "This parameter specifies the number of data disks to be attached to the VM"
            }
          },    
          "vmDataDiskSize": {
            "type": "array",
            "defaultValue": [ 32, 64, 128, 256, 512, 1024, 2048, 4095 ],
            "metadata": {
              "description": "This parameter specifies the size of data disk in GB"
            }
          },
          "vmImagePublisher": {
            "type": "string",
            "metadata": {
              "description": "This parameter specifies VM Image Publisher Name"
            }
          },
          "vmImageOffer": {
            "type": "string",
            "metadata": {
              "description": "This parameter specifies VM Image Offer Name"
            }
          },
          "vmImageSku": {
            "type": "string",
            "metadata": {
              "description": "This parameter specifies VM Image SKU"
            }
          },
          "vmImageVersion": {
            "type": "string",
            "metadata": {
              "description": "This parameter specifies VM Image Version"
            }
          },
          "vmDisablePasswordAuth":{
              "type": "string",
              "metadata": {
                  "decription": "This parameter specifies whether Passowrd Authentication is disabled for Linux VMs"
              }
          },
          "vmSSHKeyData":{
              "type": "securestring",
              "metadata": {
                  "description": "This parameter specifies ssh Key Data for Linux VMs"
              }
          },
          "vnetNewOrExisting":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies whether a new vnet has to be created or existing vnet will be used "
            }
        },
        "vmVnetName":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies vnet name"
            }
        },
        "vmSubnetName":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies subnetName name"
            }
        },
        "vmVnetResourceGroupName":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Resource Group name"
            }
        },
        "vmPublicIpAddressName":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Public IP Address name"
            }
        },
        "DeptNameTag":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies department name Tag"
            }
        },
        "AppNameTag":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Application name Tag"
            }
        },
        "CreatedByTag":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Created By Tag"
            }
        },
        "vmnsgname":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Network Security Group Name"
            }
        },
        "vmPublicIPAddressType":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Public IP Address Type"
            }
        },
        "vmPublicIPAddressSku":{
            "type": "string",
            "metadata": {
                "description": "This parameter specifies Public IP Address sku"
            }
        },
       "vmNsgRules":{
            "type": "array",
            "metadata": {
                "description": "This parameter specifies nsg rules"
            }
        }
       
    },
    "variables": {
    "diskCaching": "ReadWrite",
    "diskCreationOption": "Empty",
     "copy": [
      {
        "name": "vmDataDisks",
        "count": "[if(equals(parameters('vmNumDataDisks'),0),1, parameters('vmNumDataDisks'))]",
        "input": {
          "caching": "[variables('diskCaching')]",
          "createOption":  "[variables('diskCreationOption')]",
          "diskSizeGB": "[parameters('vmDataDiskSize')[copyIndex('vmDataDisks')]]",
          "lun": "[copyIndex('vmDataDisks')]",
          "managedDisk": {
            "storageAccountType": "[if(equals(parameters('vmFullyBakedImageAvl'), 'Yes'),'Standard_LRS', json('null'))]"
          }
          }
      }
    ],
    "vnettemplink": "[concat('https://raw.githubusercontent.com/sripathys/MyCommomARMTemplate/master/', parameters('vnetNewOrExisting'),'vnet.json')]",
    "nsgtemplink": "https://raw.githubusercontent.com/sripathys/MyCommomARMTemplate/master/multiplesecurityrules.json"
    },
    "resources": [
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[parameters('vmLocation')]",
            "tags": {
                "Department": "[parameters('DeptNameTag')]",
                "Application": "[parameters('AppNameTag')]",
                "Created By": "[parameters('CreatedByTag')]"
              },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('vmNetworkInterfaceName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[parameters('vmDisablePasswordAuth')]",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[concat('/home/', parameters('vmAdminUsername'), '/.ssh/authorized_keys')]",
                              "keyData": "[parameters('vmSSHKeyData')]"
                            }
                          ]
                        }
                      }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[if(equals(parameters('vmFullyBakedImageAvl'), 'Yes'), parameters('vmFullyBakedImageRef'), json('null'))]",
                        "publisher": "[if(equals(parameters('vmFullyBakedImageAvl'), 'No'), parameters('vmImagePublisher'), json('null'))]",
                        "offer": "[if(equals(parameters('vmFullyBakedImageAvl'), 'No'), parameters('vmImageOffer'), json('null'))]",
                        "sku": "[if(equals(parameters('vmFullyBakedImageAvl'), 'No'), parameters('vmImageSku'), json('null'))]",
                        "version": "[if(equals(parameters('vmFullyBakedImageAvl'), 'No'), parameters('vmImageVersion'), json('null'))]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": "[if(equals(parameters('vmNumDataDisks'),0),json('null'),variables('vmDataDisks'))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('vmNetworkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId(parameters('vmVnetResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('vmDiagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "vnet-template",
            "type": "Microsoft.Resources/deployments",
             "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[variables('vnettemplink')]",
                "contentVersion": "1.0.0.0"
              },
              "parameters": {
                "virtualNetworkName": {
                  "value": "[parameters('vmVnetName')]"
                },
                "subnetName": {
                  "value": "[parameters('vmSubnetName')]"
                },
                "existingVnetResourceGroupName": {
                  "value": "[parameters('vmVnetResourceGroupName')]"
                }
              }
            }
          },
          {
            "name": "[parameters('vmnetworkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-06-01",
            "location": "[parameters('vmLocation')]",
            "dependsOn": [
              "[concat('Microsoft.Network/publicIpAddresses/', parameters('vmPublicIpAddressName'))]",
              "Microsoft.Resources/deployments/vnet-template"
            ],
            "tags": {
              "Department": "[parameters('DeptNameTag')]",
              "Application": "[parameters('AppNameTag')]",
              "Created By": "[parameters('CreatedByTag')]"
            },
            "properties": {
              "ipConfigurations": [
                {
                  "name": "ipconfig1",
                  "properties": {
                    "subnet": {
                      "id": "[reference('vnet-template').outputs.subnet1Ref.value]"
                    },
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIpAddress": {
                      "id": "[resourceId(parameters('vmVnetResourceGroupName'),'Microsoft.Network/publicIpAddresses', parameters('vmPublicIpAddressName'))]"
                    }
                  }
                }
              ],
              "networkSecurityGroup": {
                "id": "[resourceId(parameters('vmVnetResourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('vmnsgname'))]"
              }
            }
          },
          {
            "name": "[parameters('vmPublicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('vmLocation')]",
            "tags": {
              "Department": "[parameters('DeptNameTag')]",
              "Application": "[parameters('AppNameTag')]",
              "Created By": "[parameters('CreatedByTag')]"
            },
            "properties": {
              "publicIPAllocationMethod": "[parameters('vmPublicIPAddressType')]"
            },
            "sku": {
              "name": "[parameters('vmPublicIPAddressSku')]"
            }
          },
          {
            "apiVersion": "2017-05-10",
            "name": "nsg-template",
            "type": "Microsoft.Resources/deployments",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[variables('nsgtemplink')]",
                "contentVersion": "1.0.0.0"
              },
              "parameters": {
                "networkSecurityGroupName": {
                  "value": "[parameters('vmnsgname')]"
                },
                "location": {
                  "value": "[parameters('vmlocation')]"
                },
                "securityRules": {
                  "value": "[parameters('vmNsgRules')]"
                }
      
              }
      
            }
          }       
        ],
    "outputs": {    
    }
}